package Quicksort;

import java.io.FileNotFoundException;

public class QuickSort {
    static int i=0;
    static int size;
    
    public static int partition(int[] a, int begin, int end) {
    	int n = a.length;
        int pivot, temp, L, R;
        i++; 
        L = begin;
        R = end;
        pivot = (int)((begin+end)/2);
        System.out.println(i+" step: pivot="+a[pivot]);
         
        while(L<R) {
            while((a[L]<=a[pivot]) && (L<=R)) L++;
            while((a[R]>a[pivot]) && (L<=R)) R--;
            if(L<=R) { 
                temp = a[L];
                a[L] = a[R];
                a[R] = temp;
                if(R == pivot) {
                    for(int t=0;t<size;t++) {
                        System.out.print(a[t]+" ");
                    }
                    System.out.println();
                    return L;
                }
            }
        }
        
        temp = a[pivot];
        a[pivot] = a[R];
        a[R] = temp;
        for(int t=0;t<size;t++) {
            System.out.print(a[t]+" ");
        }
        System.out.println();
        return R;
    }
    
   static void quickSort(int[] a, int begin, int end) {
        if(begin<end) {
            int p = partition(a, begin, end); 
            quickSort(a, begin, p-1);
            quickSort(a, p+1, end);
        }
    }
	static void printArray(int a[]) {
		int n = a.length;
		for (int i = 0; i < n; ++i)
			System.out.print(a[i] + " ");

		System.out.println();
	}
    
    public static void main(String[] args) throws FileNotFoundException {
		InsertArray list = new InsertArray();
		
		System.out.println();
		size = list.q().length;
		 quickSort(list.q(), 0, size-1);
      
     
    }
 
}